{"version":3,"sources":["context/SemesterCourseContext.ts","components/Course.tsx","components/SemesterTable.tsx","components/DropdownMenu.tsx","components/CourseLists.tsx","components/DisplayCourseList.tsx","context/CourseContext.ts","components/CourseContainer.tsx","components/MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SemesterCourseContext","React","createContext","Course","props","draggableId","name","index","ind","prov","ListGroup","Item","ref","innerRef","draggableProps","dragHandleProps","getSemesterStr","semesterNum","SemesterTable","Consumer","value","droppableId","Table","Array","fill","map","e","i","droppableProps","section","DropdownMenu","setConcentration","Dropdown","Toggle","variant","id","Menu","as","onClick","CONCENTRATIONS","AIConc","BioConc","SecurityConc","DataScienceConc","HPCConc","NetworksConc","TheoryConc","DisplayCourseList","concentration","CourseContext","COURSES","CourseContainer","placeholder","MainPage","useState","courses","setCourses","semesterCourses","setSemesterCourses","Provider","onDragEnd","result","destination","console","log","theCourses","theCourse","splice","source","tmpSemesterCourses","Container","Row","Col","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99b85cd0.chunk.js","sourcesContent":["import { Course as CourseType } from \"../interfaces/course\";\nimport React from \"react\";\n\nexport const SemesterCourseContext = React.createContext<CourseType[]>([]);\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\n\nexport const Course = (props: { name: string, ind: number }): JSX.Element =>\n    <>\n        <Draggable draggableId={props.name} index={props.ind} key={props.name}>\n            {(prov) => \n                <>\n                    <ListGroup.Item ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps}>{`${props.name}`}</ListGroup.Item>\n                </>\n            }\n        </Draggable>\n    </>;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Table, ListGroup } from \"react-bootstrap\";\nimport React from \"react\";\nimport { Droppable, DroppableProvided } from \"react-beautiful-dnd\";\nimport { SemesterCourseContext } from \"../context/SemesterCourseContext\";\nimport { Course } from \"./Course\";\n\nexport const getSemesterStr = (semesterNum: number): string => {\n    switch (semesterNum % 10) {\n    case 1:\n        return `${semesterNum}st`;\n    case 2:\n        return `${semesterNum}nd`;\n    case 3:\n        return `${semesterNum}rd`;\n    default:\n        return `${semesterNum}th`;\n    }\n};\n\nexport const SemesterTable = (): JSX.Element =>\n    <SemesterCourseContext.Consumer>\n        {value =>\n            <Droppable droppableId=\"semester-table\">\n                {(prov: DroppableProvided) =>\n\n                    <Table >\n                        <thead>\n                            <tr>\n                                {new Array(1).fill(0).map((e, i) => <th key={i}>{`${getSemesterStr(i + 1)} semester`}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody {...prov.droppableProps} ref={prov.innerRef}>\n                            <tr>\n                                <ListGroup>\n                                    {\n                                        value.map((e, i) =>\n                                            <ListGroup.Item key={i}>\n                                                <Course name={`${e.name}-${e.section}`} ind={i}/>\n                                            </ListGroup.Item>\n                                        )\n                                    }\n                                </ListGroup>\n                            </tr>\n                        </tbody>\n                    </Table>\n                }\n            </Droppable>\n        }\n    </SemesterCourseContext.Consumer>;\n","import { Dropdown } from \"react-bootstrap\";\nimport { Concentration } from \"../interfaces/concentration\";\nimport CONCENTRATIONS from \"../json/concentrations.json\";\nimport React from \"react\";\n\nexport function DropdownMenu({setConcentration}:\n    {setConcentration: (concentration:Concentration)=>void}): JSX.Element{\n    \n    return <div>\n        <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                Concentrations:\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n                <Dropdown.Item as=\"button\" onClick={()=>setConcentration(CONCENTRATIONS[0])}>AI and Robotics</Dropdown.Item>\n                <Dropdown.Item as=\"button\" onClick={()=>setConcentration(CONCENTRATIONS[1])}>Bioinformatics</Dropdown.Item>\n                <Dropdown.Item as=\"button\" onClick={()=>setConcentration(CONCENTRATIONS[2])}>Cybersecurity</Dropdown.Item>\n                <Dropdown.Item as=\"button\" onClick={()=>setConcentration(CONCENTRATIONS[3])}>Data Science</Dropdown.Item>\n                <Dropdown.Item as=\"button\" onClick={()=>setConcentration(CONCENTRATIONS[4])}>High-Performance Computing</Dropdown.Item>\n                <Dropdown.Item as=\"button\" onClick={()=>setConcentration(CONCENTRATIONS[5])}>Networks and Systems</Dropdown.Item>\n                <Dropdown.Item as=\"button\" onClick={()=>setConcentration(CONCENTRATIONS[6])}>Theory</Dropdown.Item>\n            </Dropdown.Menu>\n        </Dropdown>\n    </div>;\n}","import React from \"react\";\n\nexport function AIConc(): JSX.Element{\n    return <div>\n        <h2>Artificial Intelligence and Robotics</h2>\n        <p>CISC Core and Concentration:</p>\n        <p>College of Engineering Requirements:</p>\n        <p>Choose One Lab Sequence:</p>\n        <p>Select One Writing Course:</p>\n        <p>Select One Statistics Course:</p>\n        <p>Select One Systems Course:</p>\n        <p>Select Four from the Following:</p>\n    </div>;\n}\n\nexport function BioConc(): JSX.Element{\n    return <div>\n        <h2>Bioinformatics</h2>\n        <p>CISC Core and Concentration:</p>\n        <p>College of Engineering Requirements:</p>\n        <p>Choose One Chem Sequence:</p>\n        <p>Choose One Organic Chem Sequence:</p>\n        <p>Select One Writing Course:</p>\n        <p>Select One Statistics Course:</p>\n        <p>Select One Data Analysis Course:</p>\n        <p>Select Two from the Following:</p>\n    </div>;\n}\n\nexport function SecurityConc(): JSX.Element{\n    return <div>\n        <h2>Cybersecurity</h2>\n        <p>CISC Core and Concentration:</p>\n        <p>College of Engineering Requirements:</p>\n        <p>Choose One Lab Sequence:</p>\n        <p>Select One Writing Course:</p>\n        <p>Select One Statistics Course:</p>\n        <p>Select Two Advanced Reqs:</p>\n        <p>Select Two from the Following:</p>\n    </div>;\n}\n\nexport function DataScienceConc(): JSX.Element{\n    return <div>\n        <h2>Data Science</h2>\n        <p>CISC Core and Concentration:</p>\n        <p>College of Engineering Requirements:</p>\n        <p>Choose One Lab Sequence:</p>\n        <p>Select One Writing Course:</p>\n        <p>Select One Advanced Data Science:</p>\n        <p>Select One Advanced Math:</p>\n        <p>Select One of the Following:</p>\n    </div>;\n}\n\nexport function HPCConc(): JSX.Element{\n    return <div>\n        <p>Come back and figure this one out later</p>\n    </div>;\n}\n\nexport function NetworksConc(): JSX.Element{\n    return <div>\n        <h2>Networks and Systems</h2>\n        <p>CISC Core and Concentration:</p>\n        <p>College of Engineering Requirements:</p>\n        <p>Choose One Lab Sequence:</p>\n        <p>Select One Writing Course:</p>\n        <p>Select One Statistics Course:</p>\n        <p>Select One Security Requirement:</p>\n        <p>Select Two Systems Requirements:</p>\n        <p>Select Two of the Following:</p>\n    </div>;\n}\n\nexport function TheoryConc(): JSX.Element{\n    return <div>\n        <h2>Theory</h2>\n        <p>CISC Core and Concentration:</p>\n        <p>College of Engineering Requirements:</p>\n        <p>Choose One Lab Sequence:</p>\n        <p>Select One Writing Course:</p>\n        <p>Select One Statistics Course:</p>\n        <p>Select One of the Following Tracks:</p>\n        <p>Select Two of the Following:</p>\n    </div>;\n}","import React from \"react\";\nimport { Concentration } from \"../interfaces/concentration\";\nimport { AIConc, BioConc, SecurityConc, DataScienceConc, HPCConc, NetworksConc, TheoryConc } from \"./CourseLists\";\nimport CONCENTRATIONS from \"../json/concentrations.json\";\n\nexport function DisplayCourseList({concentration}:{concentration:Concentration}): JSX.Element{\n    if (concentration==CONCENTRATIONS[0]){\n        return <AIConc></AIConc>;\n    } else if (concentration==CONCENTRATIONS[1]){\n        return <BioConc></BioConc>;\n    } else if (concentration==CONCENTRATIONS[2]){\n        return <SecurityConc></SecurityConc>;\n    } else if (concentration==CONCENTRATIONS[3]){\n        return <DataScienceConc></DataScienceConc>;\n    } else if (concentration==CONCENTRATIONS[4]){\n        return <HPCConc></HPCConc>;\n    } else if (concentration==CONCENTRATIONS[5]){\n        return <NetworksConc></NetworksConc>;\n    } else if (concentration==CONCENTRATIONS[6]){\n        return <TheoryConc></TheoryConc>;\n    } else {\n        return <div></div>;\n    }\n}","import COURSES from \"../json/courses.json\";\nimport { Course } from \"../interfaces/course\";\nimport React from \"react\";\n\nexport const CourseContext = React.createContext<Course[]>(COURSES as Course[]);\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Course } from \"./Course\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { CourseContext } from \"../context/CourseContext\";\nimport React from \"react\";\n\nexport const CourseContainer = (): JSX.Element =>\n    <>\n        <CourseContext.Consumer>\n            {value =>\n                <Droppable droppableId=\"coursecontainer\">\n                    {(prov) =>\n                        <ListGroup {...prov.droppableProps} ref={prov.innerRef}>\n                            {value.map((e, i) => <Course name={`${e.name}-${e.section}`} ind={i} key={i} />)}\n                            {prov.placeholder}\n                        </ListGroup>\n                    }\n                </Droppable>\n            }\n        </CourseContext.Consumer>\n    </>;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { SemesterTable } from \"./SemesterTable\";\nimport React, { useState } from \"react\";\nimport {DropdownMenu} from \"./DropdownMenu\";\nimport { DisplayCourseList } from \"./DisplayCourseList\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { CourseContainer } from \"./CourseContainer\";\nimport { CourseContext } from \"../context/CourseContext\";\nimport COURSES from \"../json/courses.json\";\nimport { Course as CourseType } from \"../interfaces/course\";\nimport { SemesterCourseContext } from \"../context/SemesterCourseContext\";\nimport { Concentration } from \"../interfaces/concentration\";\nimport CONCENTRATIONS from \"../json/concentrations.json\";\n\nexport const MainPage = (): JSX.Element => {\n    const [concentration, setConcentration] = useState<Concentration>(CONCENTRATIONS[0] as Concentration);\n    const [courses, setCourses] = useState<CourseType[]>(COURSES as CourseType[]);\n    const [semesterCourses, setSemesterCourses] = useState<CourseType[]>([]);\n\n    const onDragEnd = (result: DropResult) => {\n        if (!result.destination) {\n            return;\n        }\n        console.log(result);\n        const theCourses = courses;\n        const theCourse = theCourses.splice(result.source.index, 1)[0];\n        if (result.destination.droppableId === \"coursecontainer\") {\n            theCourses.splice(result.destination?.index, 0, theCourse);\n            setCourses(theCourses);\n        } else if (result.destination.droppableId === \"semester-table\") {\n            const tmpSemesterCourses = [...semesterCourses, theCourse];\n            setSemesterCourses(tmpSemesterCourses);\n            setCourses(theCourses);\n            console.log(\"running proper func\");\n        }\n    };\n\n    return (\n        <>\n            <CourseContext.Provider value={courses}>\n                <SemesterCourseContext.Provider value={semesterCourses}>\n                    <DragDropContext\n                        onDragEnd={onDragEnd}\n                    >\n                        <Container>\n                            <Row>\n                                <Col>\n                                    Course Scheduler\n                                </Col>\n                                <Col>\n                                    <Row>\n                                        <Col>\n                                            <DropdownMenu setConcentration={setConcentration}></DropdownMenu>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <DisplayCourseList concentration={concentration}></DisplayCourseList>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <CourseContainer />\n                                </Col>\n                                <Col>\n                                    <SemesterTable />\n                                </Col>\n                            </Row>\n                        </Container>\n                    </DragDropContext>\n                </SemesterCourseContext.Provider>\n            </CourseContext.Provider>\n        </>\n    );\n};\n","import React from \"react\";\nimport { MainPage } from \"./components/MainPage\";\nimport \"./App.css\";\n\nfunction App(): JSX.Element {\n    return (\n        <div className=\"App\">\n            <MainPage />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n    ,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}